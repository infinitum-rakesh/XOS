alias SysNo S0;
alias New S1;
alias FILE_DESC S2;
alias POFT S3;
alias RET_VAL S4;
alias SWOFT_INDEX S5;
alias FAT_INDEX S6;
alias SIZE S7;
alias WORD S8;
alias BASIC S9;
alias BLOCK_NUM S10;

SysNo = [([PTBR + 2 * ((SP-1) / 512)] * 512) + ((SP-1) % 512)];
New = [([PTBR + 2 * ((SP-3) / 512)] * 512) + ((SP-3) % 512)];
FILE_DESC = [([PTBR + 2 * ((SP-4) / 512)] * 512) + ((SP-4) % 512)];
POFT = READY_LIST + ((PTBR - 1024)/8)*32 + 15;

if(SysNo==6)then
	if((FILE_DESC>=0)&&(FILE_DESC<8))then
		SWOFT_INDEX = [POFT + FILE_DESC*2];
		if(SWOFT_INDEX!=-1)then
			FAT_INDEX = [FILE_TABLE + SWOFT_INDEX*2]; 
			SIZE = [FAT + FAT_INDEX*8 + 1];
			if((New>=0)&&(New<SIZE))then
				[POFT + FILE_DESC*2 + 1] = New;
				RET_VAL = 0;
			else
				RET_VAL = -1;
			endif;
		else
			RET_VAL = -1;
		endif;
	else
		RET_VAL = -1;
	endif;
endif;

if(SysNo==7)then
//	print "in read";
	if((FILE_DESC>=0)&&(FILE_DESC<8))then
		SWOFT_INDEX = [POFT + FILE_DESC*2];
		if(SWOFT_INDEX!=-1)then
			FAT_INDEX = [FILE_TABLE + SWOFT_INDEX*2]; 
			New = [POFT + FILE_DESC*2 + 1];
			BASIC = [FAT + FAT_INDEX*8 + 2];
			load(1,BASIC);
			SIZE = [FAT + FAT_INDEX*8 + 1];
			if(New==SIZE)then
				RET_VAL = -1;
			else
				BLOCK_NUM = [512 + New/512];
				load(1,BLOCK_NUM);
				WORD = [512 + New%512];
				[([PTBR + 2 * ((SP-3) / 512)] * 512) + ((SP-3) % 512)] = WORD;
				[POFT + FILE_DESC*2 + 1] = [POFT + FILE_DESC*2 + 1] + 1;
				RET_VAL = 0;
			endif;
		else
			RET_VAL = -1;
		endif;
	else
		RET_VAL = -1;
	endif;
endif;
//breakpoint;
[([PTBR + 2 * ((SP-2) / 512)] * 512) + ((SP-2) % 512)] = RET_VAL;
ireturn;
