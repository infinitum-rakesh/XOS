//S0 FOR physical SP;
//S1 for syscallno;
//s2 for wordto write
//S3 for filedescriptor
//S4 for PID
//S5 for PCB

S0=([PTBR+2*(SP/512)]*512)+(SP%512);

S1=[S0-1];

S2=[S0-3];

S3=[S0-4];

S4=(PTBR-1024)/8;

S5=READY_LIST+32*S4;

breakpoint;

if((S3<0) || (S3>7)) then
	[S0-2]=-1;
	ireturn;
endif;

if(S1==5) then
	if([S5+15+2*S3]==-1) then
			[S0-2]=-1;
			ireturn;
	else
		S6=[S5+15+2*S3];
		S7=[S5+15+2*S3+1];
	endif;

	breakpoint;

	
	S8=[FILE_TABLE+S6*2];
	S9=[FAT+S8*8+2];			//index should not be -1
	
	breakpoint;

	load(1,S9);

	breakpoint;
	
	if([SCRATCHPAD+(S7/512)]==-1) then
		S10=DISK_LIST+24;
		breakpoint;
		while(S10<=(DISK_LIST+447)) do
			if([S10]==0) then
				break;
			endif;
		S10=S10+1;
		endwhile;

		breakpoint;

		if(S10>(DISK_LIST+447)) then
			[S0-2]=-1;
			ireturn;
		endif;

		[S10]=1;
		[SCRATCHPAD+(S7/512)]=(S10%DISK_LIST);
		store(1,S9);
		breakpoint;

		[FAT+S8*8+1]=[FAT+S8*8+1]+512;

		store(5,19);
		store(6,20);
		breakpoint;	

		load(1,(S10%DISK_LIST));
		[SCRATCHPAD+(S7%512)]=S2;
		breakpoint;

		store(1,(S10%DISK_LIST));
	else
		S14=[SCRATCHPAD+(S7/512)];
		load(1,[SCRATCHPAD+(S7/512)]);
		[SCRATCHPAD+(S7%512)]=S2;
		breakpoint;
		//[FAT+S8*8+1]=[FAT+S8*8+1]+1;
		store(5,19);
		store(6,20);

		store(1,S14);
	endif;
	
	

	[S5+15+2*S3+1]=[S5+15+2*S3+1]+1;

	[S0-2]=0;
	
	breakpoint;

	ireturn;

endif;



