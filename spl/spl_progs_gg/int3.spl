//S0 FOR physical SP;
//S1 for syscallno;
//s2 for newlseek 0r wordread
//S3 for filedescriptor
//S4 for PID
//S5 for PCB
//S8 for file size

S0=([PTBR+2*(SP/512)]*512)+(SP%512);

S1=[S0-1];

S2=[S0-3];

S3=[S0-4];

S4=(PTBR-1024)/8;

S5=READY_LIST+32*S4;

if((S3<0) || (S3>7)) then
	[S0-2]=-1;
	ireturn;
endif;

if(S1==6) then
	if([S5+15+2*S3]==-1) then
			[S0-2]=-1;
			ireturn;
	else
		S6=[S5+15+S3*2];
	endif;

	S7=[FILE_TABLE+S6*2];
	S8=[FAT+S7*8+1];

	if((S2<0) || (S2>S8)) then
		[S0-2]=-1;
		ireturn;
	else
		[S5+15+S3*2+1]=S2;
		[S0-2]=0;
		ireturn;
	endif;

endif;	


if(S1==7) then
	if([S5+15+2*S3]==-1) then
			[S0-2]=-1;
			ireturn;
	else
		S6=[S5+15+S3*2];
		S7=[S5+15+S3*2+1];

	endif;

	S8=[FILE_TABLE+S6*2];
	S9=[FAT+S8*8+2];

breakpoint;

	
	if(S7==[FAT+S8*8+1]) then
		[S0-2]=-1;
		ireturn;
	endif;

breakpoint;

	load(1,S9);



	S10=[SCRATCHPAD+(S7/512)];

	load(1,S10);

	S2=[SCRATCHPAD+(S7%512)];
breakpoint;
	[S5+15+S3*2+1]=[S5+15+S3*2+1]+1;

breakpoint;
	[S0-2]=0;
	[S0-3]=[SCRATCHPAD+(S7%512)];
	
	ireturn;
endif;



